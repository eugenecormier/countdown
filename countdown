#!/usr/bin/env python3

##########################################
#
#    Coded by Eugene Cormier
#         May-Oct 2017
#
# Written to fill the gaping hole in the
#     Linux ecosystem, namely a nice
#     commandline countdown timer
#
# you need the following for this script
#   to work:
#               ogg123
##########################################


##################################################
# IMPORTS
##################################################
from sys import argv,exit
from time import sleep
from subprocess import call
from os import devnull,path

audiocommand = 'ogg123'
audiofile = '/usr/share/sounds/freedesktop/stereo/alarm-clock-elapsed.oga'

##################################################
# FUNCTIONS
##################################################

def noargsthenbail():
    if len(argv)==1 or argv[1]=='--help':
        # this needs to be changed to be more informative
        print('Simple Command Line Timer\n')
        print('usage: countdown [number][hms]\n')
        print('examples:')
        print('\tcountdown 1h')
        print('\tcountdown 30m')
        print('\tcountdown 20s\n')
        # test for default player and audiofiles
        print('defaults:')
        # test audio player
        if not path.isfile('/usr/bin/' + audiocommand):
            print('Audio player: ' + audiocommand + ' (not found!)')
        else:
            print('Audio player: ' + audiocommand + ' (present in /usr/bin)')
        # test audio file
        if not path.isfile(audiofile):
            print('Audio file: ' + audiofile + ' (not found!)')
        else:
            print('Audio player: ' + audiofile + ' (found!)')



        exit(1)

def parsearguments():
    userinput = argv[1]
    timervalue = []
    # hours
    if userinput[-1]=='H' or userinput[-1]=='h':
        if len(userinput) == 3:
            timervalue.append(userinput[0:len(userinput)-1])
        else:
            timervalue.append('0' + userinput[0:len(userinput)-1])
    else:
        timervalue.append('00')
    # minutes
    if userinput[-1]=='M' or userinput[-1]=='m':
        if len(userinput) == 3:
            timervalue.append(userinput[0:len(userinput)-1])
        else:
            timervalue.append('0' + userinput[0:len(userinput)-1])
    else:
        timervalue.append('00')
    # seconds
    if userinput[-1]=='S' or userinput[-1]=='s':
        if len(userinput) == 3:
            timervalue.append(userinput[0:len(userinput)-1])
        else:
            timervalue.append('0' + userinput[0:len(userinput)-1])
    else:
        timervalue.append('00')
    return timervalue

def seconds(timervalue):
  temp = timervalue[2]
  temp = int(temp) - 1
  if len(str(temp)) == 2:
    timervalue[2] = temp
  else:
    timervalue[2] = '0' + str(temp)
  print('\rCountDown Timer: ' + str(timervalue[0]) + ':' + str(timervalue[1]) + ':' + str(timervalue[2]) + "    " , end="" )

def minutes(timervalue):
  temp = timervalue[1]
  temp = int(temp) - 1
  if len(str(temp)) == 2:
    timervalue[1] = temp
  else:
    timervalue[1] = '0' + str(temp)
  timervalue[2] = 60

def hours(timervalue):
  temp = timervalue[0]
  temp = int(temp) - 1
  if len(str(temp)) == 2:
    timervalue[0] = temp
  else:
    timervalue[0] = '0' + str(temp)
  timervalue[1] = 60

def runtimer(timervalue):
  try:
    while True:
      if timervalue[2] != '00': # if seconds value is set
        seconds(timervalue)
        sleep(1)
      else: # if seconds are at 00
        if timervalue[1] != '00': # if minutes value is set
          minutes(timervalue)
        else: # if minutes are at 00
          if timervalue[0] != '00': # if hours value is set
            hours(timervalue)
          else:
            break
          pass
        pass
  except KeyboardInterrupt:
    exit()

def soundandbreak(audiofile):
  try:
    print("\rCountDown Timer: 00:00:00  --> Countdown Complete, press 'ctrl + c' to exit   " , end="" )
    while True:
      # stderr=nowhere: don't echo audio command output to term
      nowhere = open(devnull, 'w')
      call([audiocommand, audiofile], stderr=nowhere)
  except KeyboardInterrupt:
    exit()

####

def main():
    noargsthenbail()
    totaltime = parsearguments()
    runtimer(totaltime)
    soundandbreak(audiofile)

main()
